// <auto-generated />
using System;
using Cenfotur.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cenfotur.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221013200438_AlterTable_ProgramacionInfoPFC")]
    partial class AlterTable_ProgramacionInfoPFC
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cenfotur.Entidad.Models.Alcance", b =>
                {
                    b.Property<int>("AlcanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlcanceId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("AlcanceId");

                    b.ToTable("Alcances");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Anio", b =>
                {
                    b.Property<int>("AnioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnioId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("ConDirectaMonMax")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Nombre");

                    b.Property<string>("NombreOficial")
                        .IsRequired()
                        .HasMaxLength(170)
                        .HasColumnType("varchar(170)")
                        .HasColumnName("NombreOficial");

                    b.Property<int>("UIT")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("AnioId");

                    b.ToTable("Anios");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Asistencia", b =>
                {
                    b.Property<int>("AsistenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsistenciaId"), 1L, 1);

                    b.Property<bool>("Asistio")
                        .HasColumnType("bit");

                    b.Property<int>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<int?>("FacilitadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAsistencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("AsistenciaId");

                    b.HasIndex("CapacitacionId");

                    b.HasIndex("FacilitadorId");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Asistencia");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Capacitacion", b =>
                {
                    b.Property<int>("CapacitacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CapacitacionId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<bool>("EstaCerrada")
                        .HasColumnType("bit");

                    b.Property<int?>("FacilitadorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("Date")
                        .HasColumnName("FechaFin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("Date")
                        .HasColumnName("FechaInicio");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("GestorId")
                        .HasColumnType("int");

                    b.Property<int>("TipoCapacitacionId")
                        .HasColumnType("int");

                    b.Property<string>("UbigueoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("CapacitacionId");

                    b.HasIndex("CursoId");

                    b.HasIndex("FacilitadorId");

                    b.HasIndex("GestorId");

                    b.HasIndex("TipoCapacitacionId");

                    b.HasIndex("UbigueoId");

                    b.ToTable("Capacitaciones");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Cargo", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CargoId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<string>("TipoCargo")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("TipoCargo");

                    b.HasKey("CargoId");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Certificado", b =>
                {
                    b.Property<int>("CertificadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificadoId"), 1L, 1);

                    b.Property<int>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCertificado")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<string>("Ruta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CertificadoId");

                    b.HasIndex("CapacitacionId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Clase", b =>
                {
                    b.Property<int>("ClaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaseId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("ClaseId");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Contratacion", b =>
                {
                    b.Property<int>("ContratacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContratacionId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("AnioId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ArchivoOrdenServicio")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ArchivoOrdenServicio");

                    b.Property<string>("ContratacionDescripcion")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ContratacionDescripcion");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("Date")
                        .HasColumnName("FechaContratacion");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("MetaPresupuestalId")
                        .HasColumnType("int");

                    b.Property<string>("OrdenServicio")
                        .HasColumnType("varchar(40)")
                        .HasColumnName("OrdenServicio");

                    b.Property<int>("PuestoLaboralId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Remuneracion")
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("ContratacionId");

                    b.HasIndex("AnioId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("MetaPresupuestalId");

                    b.HasIndex("PuestoLaboralId");

                    b.ToTable("Contrataciones");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Codigo");

                    b.Property<bool>("DesempenioNoAplica")
                        .HasColumnType("bit");

                    b.Property<int>("Dias")
                        .HasColumnType("int");

                    b.Property<decimal>("ExamenEntrada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Final")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("FinalNoAplica")
                        .HasColumnType("bit");

                    b.Property<int>("Horas")
                        .HasColumnType("int");

                    b.Property<int>("HorasAprobar")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Nombre");

                    b.Property<int?>("PerfilRelacionadoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Practica")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Practica2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Practica3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Practica4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Practica5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PracticaNoAplica")
                        .HasColumnType("bit");

                    b.Property<bool?>("PracticaNoAplica2")
                        .HasColumnType("bit");

                    b.Property<bool?>("PracticaNoAplica3")
                        .HasColumnType("bit");

                    b.Property<bool?>("PracticaNoAplica4")
                        .HasColumnType("bit");

                    b.Property<bool?>("PracticaNoAplica5")
                        .HasColumnType("bit");

                    b.Property<string>("Resolucion")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Resolucion");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("CursoId");

                    b.HasIndex("PerfilRelacionadoId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Departamento", b =>
                {
                    b.Property<string>("DepartamentoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Dicertur", b =>
                {
                    b.Property<int>("DicerturId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DicerturId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("DicerturId");

                    b.ToTable("Dicerturs");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.DirectorioEncuesta", b =>
                {
                    b.Property<int>("DirectorioEncuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectorioEncuestaId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActorLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistritoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Institucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recomendaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoMovil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("DirectorioEncuestaId");

                    b.HasIndex("DistritoId");

                    b.ToTable("DirectoriosEncuestas");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Distrito", b =>
                {
                    b.Property<string>("DistritoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartamentoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<string>("ProvinciaId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DistritoId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Distritos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Documentacion", b =>
                {
                    b.Property<int>("DocumentacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentacionId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("OsFacilitador")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("OsFacilitador");

                    b.Property<string>("OsGestor")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("OsGestor");

                    b.Property<string>("TdrFacilitador")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TdrFacilitador");

                    b.Property<string>("TdrGestor")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TdrGestor");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("DocumentacionId");

                    b.HasIndex("CapacitacionId");

                    b.ToTable("Documentaciones");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ApellidoMaterno");

                    b.Property<string>("ApellidoPaterno")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ApellidoPaterno");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Contrasena");

                    b.Property<string>("Correo")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Correo");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("Date")
                        .HasColumnName("FechaNacimiento");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombres");

                    b.Property<string>("NumDoc")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NumDoc");

                    b.Property<int?>("PuestoLaboralId")
                        .HasColumnType("int");

                    b.Property<int>("SexoId")
                        .HasColumnType("int");

                    b.Property<string>("TelefMovil")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TelefMovil");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Usuario");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("NumDoc")
                        .IsUnique();

                    b.HasIndex("PuestoLaboralId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.EmpleadoRol", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("EmpleadoRol");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaId"), 1L, 1);

                    b.Property<bool>("AceptaCorreosOtros")
                        .HasColumnType("bit");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("ClaseId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Codigo");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CorreoElectronico");

                    b.Property<string>("DepartamentoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DicerturId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Direccion");

                    b.Property<string>("DistritoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("Horas")
                        .HasColumnType("int");

                    b.Property<string>("NombreComercial")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NombreComercial");

                    b.Property<string>("NombreCurso")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NombreCurso");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PaginaWeb");

                    b.Property<string>("ProvinciaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("RazonSocial");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RubroId")
                        .HasColumnType("int");

                    b.Property<string>("Ruc")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Ruc");

                    b.Property<string>("TelefonoFijo")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TelefonoFijo");

                    b.Property<string>("TelefonoMovil")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TelefonoMovil");

                    b.Property<int?>("TipoContribuyenteId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("WebInscrita")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("WebInscrita");

                    b.HasKey("EmpresaId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ClaseId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("DicerturId");

                    b.HasIndex("DistritoId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("RubroId");

                    b.HasIndex("TipoContribuyenteId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.EncuestaSatisfaccion", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<string>("DistritoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Eva1")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva1");

                    b.Property<string>("Eva10")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva10");

                    b.Property<string>("Eva11")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva11");

                    b.Property<string>("Eva12")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva12");

                    b.Property<string>("Eva13")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva13");

                    b.Property<string>("Eva2")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva2");

                    b.Property<string>("Eva3")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva3");

                    b.Property<string>("Eva4")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva4");

                    b.Property<string>("Eva5")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva5");

                    b.Property<string>("Eva6")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva6");

                    b.Property<string>("Eva7")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva7");

                    b.Property<string>("Eva8")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva8");

                    b.Property<string>("Eva9")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Eva9");

                    b.Property<int?>("FacilitadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Mejora1")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Mejora1");

                    b.Property<string>("Mejora2")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Mejora2");

                    b.Property<string>("Mejora3")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Mejora3");

                    b.HasKey("ParticipanteId", "CapacitacionId");

                    b.HasIndex("CapacitacionId");

                    b.HasIndex("DistritoId");

                    b.HasIndex("FacilitadorId");

                    b.ToTable("EncuestaSatisfaccion");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.EstadoCivil", b =>
                {
                    b.Property<int>("EstadoCivilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoCivilId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("EstadoCivilId");

                    b.ToTable("EstadosCiviles");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.FacilitadorArchivo", b =>
                {
                    b.Property<int>("FacilitadorArchivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacilitadorArchivoId"), 1L, 1);

                    b.Property<string>("Archivo")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Archivo");

                    b.Property<int>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<int>("FacilitadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoArchivo")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TipoArchivo");

                    b.HasKey("FacilitadorArchivoId");

                    b.HasIndex("CapacitacionId");

                    b.HasIndex("FacilitadorId");

                    b.ToTable("FacilitadorArchivos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.FichaSupervision", b =>
                {
                    b.Property<int>("FichaSupervisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FichaSupervisionId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<int?>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<string>("DepartamentoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("FacilitadorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaSupervision")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoSupervisionId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("FichaSupervisionId");

                    b.HasIndex("CapacitacionId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("FacilitadorId");

                    b.HasIndex("ProgramaId");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("TipoSupervisionId");

                    b.ToTable("FichasSupervision");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.MaterialAcademico", b =>
                {
                    b.Property<int>("MaterialAcademicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialAcademicoId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<string>("Evaluaciones")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Evaluaciones");

                    b.Property<string>("FacFormatoInforme")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("FacFormatoInforme");

                    b.Property<string>("FacInstructivos")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("FacInstructivos");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("FichaAsistencia")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("FichaAsistencia");

                    b.Property<string>("FichaEmpresa")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("FichaEmpresa");

                    b.Property<string>("FichaParticipante")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("FichaParticipante");

                    b.Property<string>("GesFormatoInforme")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("GesFormatoInforme");

                    b.Property<string>("GesInstructivos")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("GesInstructivos");

                    b.Property<string>("Ppt")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Ppt");

                    b.Property<string>("Sillabus")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Sillabus");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("MaterialAcademicoId");

                    b.HasIndex("CapacitacionId");

                    b.ToTable("MaterialesAcademicos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.MetaPresupuestal", b =>
                {
                    b.Property<int>("MetaPresupuestalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MetaPresupuestalId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("AnioId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)")
                        .HasColumnName("Nombre");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("MetaPresupuestalId");

                    b.HasIndex("AnioId");

                    b.ToTable("MetasPresupuestales");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Modulo", b =>
                {
                    b.Property<int>("ModuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuloId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Icono")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Icono");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("ModuloId");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.NivelEducativo", b =>
                {
                    b.Property<int>("NivelEducativoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NivelEducativoId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("NivelEducativoId");

                    b.ToTable("NivelesEducativos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Nota", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<string>("Ed")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ED");

                    b.Property<string>("Ee")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EE");

                    b.Property<string>("Ef")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EF");

                    b.Property<string>("Ep")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EP");

                    b.Property<int?>("FacilitadorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Letras")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Letras");

                    b.Property<string>("Nf")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NF");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("ParticipanteId", "CapacitacionId");

                    b.HasIndex("CapacitacionId");

                    b.HasIndex("FacilitadorId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Participante", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipanteId"), 1L, 1);

                    b.Property<bool?>("AceptaCorreosOtros")
                        .HasColumnType("bit");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("AlcanceId")
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ApellidoMaterno");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ApellidoPaterno");

                    b.Property<int?>("CargoDirectivoId")
                        .HasColumnType("int");

                    b.Property<int?>("CargoOperativoId")
                        .HasColumnType("int");

                    b.Property<string>("CertificadoEstudios")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CertificadoEstudios");

                    b.Property<string>("CertificadoTrabajo")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CertificadoTrabajo");

                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Codigo");

                    b.Property<bool?>("ConDiscapacidad")
                        .HasColumnType("bit");

                    b.Property<string>("Contrasena")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Contrasena");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CorreoElectronico");

                    b.Property<string>("DepartamentoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DistritoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DomicilioActual")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DomicilioActual");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoCivilId")
                        .HasColumnType("int");

                    b.Property<string>("ExperienciaEmpresa")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ExperienciaEmpresa");

                    b.Property<string>("ExperienciaLaboralGeneral")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ExperienciaLaboralGeneral");

                    b.Property<string>("ExperienciaLaboralPerfil")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ExperienciaLaboralPerfil");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradoInstruccion")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GradoInstruccion");

                    b.Property<string>("LugarNacimiento")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LugarNacimiento");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nacionalidad");

                    b.Property<int?>("NivelEducativoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Nombres");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("varchar(25)")
                        .HasColumnName("NumeroDocumento");

                    b.Property<int?>("PerfilRelacionadoId")
                        .HasColumnType("int");

                    b.Property<string>("ProvinciaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RegistroEmpresa")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("RegistroEmpresa");

                    b.Property<string>("RegistroParticipante")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("RegistroParticipante");

                    b.Property<decimal?>("Remuneracion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SexoId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoEmpresa")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TelefonoEmpresa");

                    b.Property<string>("TelefonoMovil")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TelefonoMovil");

                    b.Property<string>("TipoDiscapacidad")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TipoDiscapacidad");

                    b.Property<int?>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRemuneracionId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Usuario");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("ParticipanteId");

                    b.HasIndex("AlcanceId");

                    b.HasIndex("CargoDirectivoId");

                    b.HasIndex("CargoOperativoId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("DistritoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EstadoCivilId");

                    b.HasIndex("NivelEducativoId");

                    b.HasIndex("PerfilRelacionadoId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("SexoId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("TipoRemuneracionId");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.ParticipanteCapacitacion", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Estado");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("ParticipanteId", "CapacitacionId");

                    b.HasIndex("CapacitacionId");

                    b.ToTable("ParticipanteCapacitacion");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.PerfilRelacionado", b =>
                {
                    b.Property<int>("PerfilRelacionadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilRelacionadoId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Nombre");

                    b.HasKey("PerfilRelacionadoId");

                    b.ToTable("PerfilesRelacionados");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Programa", b =>
                {
                    b.Property<int>("ProgramaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramaId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("ProgramaId");

                    b.ToTable("Programas");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.ProgramacionInfoPFC", b =>
                {
                    b.Property<int>("ProgramacionInfoPFCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramacionInfoPFCId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<string>("ContactoEnvioDiplomas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CostoGestorLocal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DiasViatico")
                        .HasColumnType("int");

                    b.Property<string>("DireccionPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnlaceAcceso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEmisionDiplomas")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEnvioDiplomas")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaRecepcionDiplomas")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSupervision")
                        .HasColumnType("datetime2");

                    b.Property<string>("GestorLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Honorarios")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdZoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NroAprobados")
                        .HasColumnType("int");

                    b.Property<int?>("NroBeneficiarios")
                        .HasColumnType("int");

                    b.Property<int?>("NroDesaprobados")
                        .HasColumnType("int");

                    b.Property<int?>("NroInscritos")
                        .HasColumnType("int");

                    b.Property<int?>("NroIpis")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OsFacilitador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OsGestor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Pasajes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PorcAprobados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PorcDesaprobados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PorcIpis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sala")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supervisa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalCostoFacilitador")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Viaticos")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProgramacionInfoPFCId");

                    b.HasIndex("CapacitacionId");

                    b.ToTable("ProgramacionesInfoPFC");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Provincia", b =>
                {
                    b.Property<string>("ProvinciaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartamentoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("ProvinciaId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.PuestoLaboral", b =>
                {
                    b.Property<int>("PuestoLaboralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PuestoLaboralId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Nombre");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("PuestoLaboralId");

                    b.ToTable("PuestosLaborales");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Referencia", b =>
                {
                    b.Property<int>("ReferenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReferenciaId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("ReferenciaId");

                    b.ToTable("Referencias");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Nombre");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("RolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.RolSubModulo", b =>
                {
                    b.Property<int>("RolSubModuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolSubModuloId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("Agregar")
                        .HasColumnType("bit");

                    b.Property<bool>("Editar")
                        .HasColumnType("bit");

                    b.Property<bool>("Eliminar")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("SubModuloId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.Property<bool>("Ver")
                        .HasColumnType("bit");

                    b.HasKey("RolSubModuloId");

                    b.HasIndex("RolId");

                    b.HasIndex("SubModuloId");

                    b.ToTable("RolSubModulo");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Rubro", b =>
                {
                    b.Property<int>("RubroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RubroId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("RubroId");

                    b.ToTable("Rubros");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Sexo", b =>
                {
                    b.Property<int>("SexoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SexoId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Nombre");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("SexoId");

                    b.ToTable("Sexos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.SubModulo", b =>
                {
                    b.Property<int>("SubModuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubModuloId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("Ruta")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Ruta");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("SubModuloId");

                    b.HasIndex("ModuloId");

                    b.ToTable("SubModulos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.TipoCapacitacion", b =>
                {
                    b.Property<int>("TipoCapacitacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoCapacitacionId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Nombre");

                    b.HasKey("TipoCapacitacionId");

                    b.ToTable("TipoCapacitaciones");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.TipoContribuyente", b =>
                {
                    b.Property<int>("TipoContribuyenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoContribuyenteId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("TipoContribuyenteId");

                    b.ToTable("TiposContribuyentes");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.TipoDocumento", b =>
                {
                    b.Property<int>("TipoDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoDocumentoId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<string>("NombreAbrev")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NombreAbrev");

                    b.Property<int>("UsuarioCreacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacionId")
                        .HasColumnType("int");

                    b.HasKey("TipoDocumentoId");

                    b.ToTable("TipoDocumentos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.TipoRemuneracion", b =>
                {
                    b.Property<int>("TipoRemuneracionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoRemuneracionId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("TipoRemuneracionId");

                    b.ToTable("TiposRemuneraciones");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.TipoSupervision", b =>
                {
                    b.Property<int>("TipoSupervisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoSupervisionId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("TipoSupervisionId");

                    b.ToTable("TiposSupervision");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Asistencia", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Capacitacion", "Capacitacion")
                        .WithMany("Asistencia")
                        .HasForeignKey("CapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Empleado", "Facilitador")
                        .WithMany()
                        .HasForeignKey("FacilitadorId");

                    b.HasOne("Cenfotur.Entidad.Models.Participante", "Participante")
                        .WithMany("Asistencia")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Empleado", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Capacitacion");

                    b.Navigation("Facilitador");

                    b.Navigation("Participante");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Capacitacion", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Empleado", "Facilitador")
                        .WithMany()
                        .HasForeignKey("FacilitadorId");

                    b.HasOne("Cenfotur.Entidad.Models.Empleado", "Gestor")
                        .WithMany()
                        .HasForeignKey("GestorId");

                    b.HasOne("Cenfotur.Entidad.Models.TipoCapacitacion", "TipoCapacitacion")
                        .WithMany("Capacitaciones")
                        .HasForeignKey("TipoCapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Distrito", "Ubigeo")
                        .WithMany("Capacitaciones")
                        .HasForeignKey("UbigueoId");

                    b.Navigation("Curso");

                    b.Navigation("Facilitador");

                    b.Navigation("Gestor");

                    b.Navigation("TipoCapacitacion");

                    b.Navigation("Ubigeo");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Certificado", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Capacitacion", "Capacitacion")
                        .WithMany("Certificados")
                        .HasForeignKey("CapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Participante", "Participante")
                        .WithMany("Certificados")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacitacion");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Contratacion", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Anio", null)
                        .WithMany("Contrataciones")
                        .HasForeignKey("AnioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Empleado", null)
                        .WithMany("Contrataciones")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.MetaPresupuestal", null)
                        .WithMany("Contrataciones")
                        .HasForeignKey("MetaPresupuestalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.PuestoLaboral", null)
                        .WithMany("Contrataciones")
                        .HasForeignKey("PuestoLaboralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Curso", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.PerfilRelacionado", "PerfilRelacionado")
                        .WithMany()
                        .HasForeignKey("PerfilRelacionadoId");

                    b.Navigation("PerfilRelacionado");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.DirectorioEncuesta", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId");

                    b.Navigation("Distrito");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Distrito", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Departamento", "Departamento")
                        .WithMany("Distritos")
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("Cenfotur.Entidad.Models.Provincia", "Provincia")
                        .WithMany("Distritos")
                        .HasForeignKey("ProvinciaId");

                    b.Navigation("Departamento");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Documentacion", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Capacitacion", "Capacitacion")
                        .WithMany("Documentaciones")
                        .HasForeignKey("CapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacitacion");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Empleado", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.PuestoLaboral", "PuestoLaboral")
                        .WithMany("Empleados")
                        .HasForeignKey("PuestoLaboralId");

                    b.HasOne("Cenfotur.Entidad.Models.TipoDocumento", null)
                        .WithMany("Empleados")
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PuestoLaboral");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.EmpleadoRol", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Empleado", "Empleado")
                        .WithMany("EmpleadoRol")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Rol", "Rol")
                        .WithMany("EmpleadoRol")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Empresa", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Cenfotur.Entidad.Models.Clase", "Clase")
                        .WithMany()
                        .HasForeignKey("ClaseId");

                    b.HasOne("Cenfotur.Entidad.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("Cenfotur.Entidad.Models.Dicertur", "Dicertur")
                        .WithMany()
                        .HasForeignKey("DicerturId");

                    b.HasOne("Cenfotur.Entidad.Models.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId");

                    b.HasOne("Cenfotur.Entidad.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("Cenfotur.Entidad.Models.Rubro", "Rubro")
                        .WithMany()
                        .HasForeignKey("RubroId");

                    b.HasOne("Cenfotur.Entidad.Models.TipoContribuyente", "TipoContribuyente")
                        .WithMany()
                        .HasForeignKey("TipoContribuyenteId");

                    b.Navigation("Categoria");

                    b.Navigation("Clase");

                    b.Navigation("Departamento");

                    b.Navigation("Dicertur");

                    b.Navigation("Distrito");

                    b.Navigation("Provincia");

                    b.Navigation("Rubro");

                    b.Navigation("TipoContribuyente");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.EncuestaSatisfaccion", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Capacitacion", "Capacitacion")
                        .WithMany("EncuestaSatisfaccion")
                        .HasForeignKey("CapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId");

                    b.HasOne("Cenfotur.Entidad.Models.Empleado", "Facilitador")
                        .WithMany()
                        .HasForeignKey("FacilitadorId");

                    b.HasOne("Cenfotur.Entidad.Models.Participante", "Participante")
                        .WithMany("EncuestaSatisfaccion")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacitacion");

                    b.Navigation("Distrito");

                    b.Navigation("Facilitador");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.FacilitadorArchivo", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Capacitacion", "Capacitacion")
                        .WithMany("FacilitadorArchivos")
                        .HasForeignKey("CapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Empleado", "Facilitador")
                        .WithMany("FacilitadorArchivos")
                        .HasForeignKey("FacilitadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacitacion");

                    b.Navigation("Facilitador");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.FichaSupervision", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Capacitacion", "Capacitacion")
                        .WithMany("FichasSupervision")
                        .HasForeignKey("CapacitacionId");

                    b.HasOne("Cenfotur.Entidad.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("Cenfotur.Entidad.Models.Empleado", "Facilitador")
                        .WithMany()
                        .HasForeignKey("FacilitadorId");

                    b.HasOne("Cenfotur.Entidad.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId");

                    b.HasOne("Cenfotur.Entidad.Models.Empleado", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.HasOne("Cenfotur.Entidad.Models.TipoSupervision", "TipoSupervision")
                        .WithMany()
                        .HasForeignKey("TipoSupervisionId");

                    b.Navigation("Capacitacion");

                    b.Navigation("Departamento");

                    b.Navigation("Facilitador");

                    b.Navigation("Programa");

                    b.Navigation("Supervisor");

                    b.Navigation("TipoSupervision");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.MaterialAcademico", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Capacitacion", "Capacitacion")
                        .WithMany("MaterialesAcademicos")
                        .HasForeignKey("CapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacitacion");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.MetaPresupuestal", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Anio", null)
                        .WithMany("MetasPresupuestales")
                        .HasForeignKey("AnioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Nota", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Capacitacion", "Capacitacion")
                        .WithMany("Notas")
                        .HasForeignKey("CapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Empleado", "Facilitador")
                        .WithMany()
                        .HasForeignKey("FacilitadorId");

                    b.HasOne("Cenfotur.Entidad.Models.Participante", "Participante")
                        .WithMany("Notas")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Empleado", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Capacitacion");

                    b.Navigation("Facilitador");

                    b.Navigation("Participante");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Participante", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Alcance", "Alcance")
                        .WithMany()
                        .HasForeignKey("AlcanceId");

                    b.HasOne("Cenfotur.Entidad.Models.Cargo", "CargoDirectivo")
                        .WithMany()
                        .HasForeignKey("CargoDirectivoId");

                    b.HasOne("Cenfotur.Entidad.Models.Cargo", "CargoOperativo")
                        .WithMany()
                        .HasForeignKey("CargoOperativoId");

                    b.HasOne("Cenfotur.Entidad.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("Cenfotur.Entidad.Models.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId");

                    b.HasOne("Cenfotur.Entidad.Models.Empresa", "Empresa")
                        .WithMany("Participantes")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("Cenfotur.Entidad.Models.EstadoCivil", "EstadoCivil")
                        .WithMany()
                        .HasForeignKey("EstadoCivilId");

                    b.HasOne("Cenfotur.Entidad.Models.NivelEducativo", "NivelEducativo")
                        .WithMany()
                        .HasForeignKey("NivelEducativoId");

                    b.HasOne("Cenfotur.Entidad.Models.PerfilRelacionado", "PerfilRelacionado")
                        .WithMany()
                        .HasForeignKey("PerfilRelacionadoId");

                    b.HasOne("Cenfotur.Entidad.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("Cenfotur.Entidad.Models.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoId");

                    b.HasOne("Cenfotur.Entidad.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId");

                    b.HasOne("Cenfotur.Entidad.Models.TipoRemuneracion", "TipoRemuneracion")
                        .WithMany()
                        .HasForeignKey("TipoRemuneracionId");

                    b.Navigation("Alcance");

                    b.Navigation("CargoDirectivo");

                    b.Navigation("CargoOperativo");

                    b.Navigation("Departamento");

                    b.Navigation("Distrito");

                    b.Navigation("Empresa");

                    b.Navigation("EstadoCivil");

                    b.Navigation("NivelEducativo");

                    b.Navigation("PerfilRelacionado");

                    b.Navigation("Provincia");

                    b.Navigation("Sexo");

                    b.Navigation("TipoDocumento");

                    b.Navigation("TipoRemuneracion");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.ParticipanteCapacitacion", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Capacitacion", "Capacitacion")
                        .WithMany("ParticipanteCapacitacion")
                        .HasForeignKey("CapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.Participante", "Participante")
                        .WithMany("ParticipanteCapacitacion")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacitacion");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.ProgramacionInfoPFC", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Capacitacion", "Capacitacion")
                        .WithMany()
                        .HasForeignKey("CapacitacionId");

                    b.Navigation("Capacitacion");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Provincia", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Departamento", "Departamento")
                        .WithMany("Provincias")
                        .HasForeignKey("DepartamentoId");

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.RolSubModulo", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Rol", "Rol")
                        .WithMany("RolSubModulo")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cenfotur.Entidad.Models.SubModulo", "SubModulo")
                        .WithOne("RolSubModulo")
                        .HasForeignKey("Cenfotur.Entidad.Models.RolSubModulo", "SubModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("SubModulo");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.SubModulo", b =>
                {
                    b.HasOne("Cenfotur.Entidad.Models.Modulo", null)
                        .WithMany("SubModulos")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Anio", b =>
                {
                    b.Navigation("Contrataciones");

                    b.Navigation("MetasPresupuestales");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Capacitacion", b =>
                {
                    b.Navigation("Asistencia");

                    b.Navigation("Certificados");

                    b.Navigation("Documentaciones");

                    b.Navigation("EncuestaSatisfaccion");

                    b.Navigation("FacilitadorArchivos");

                    b.Navigation("FichasSupervision");

                    b.Navigation("MaterialesAcademicos");

                    b.Navigation("Notas");

                    b.Navigation("ParticipanteCapacitacion");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Departamento", b =>
                {
                    b.Navigation("Distritos");

                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Distrito", b =>
                {
                    b.Navigation("Capacitaciones");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Empleado", b =>
                {
                    b.Navigation("Contrataciones");

                    b.Navigation("EmpleadoRol");

                    b.Navigation("FacilitadorArchivos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Empresa", b =>
                {
                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.MetaPresupuestal", b =>
                {
                    b.Navigation("Contrataciones");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Modulo", b =>
                {
                    b.Navigation("SubModulos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Participante", b =>
                {
                    b.Navigation("Asistencia");

                    b.Navigation("Certificados");

                    b.Navigation("EncuestaSatisfaccion");

                    b.Navigation("Notas");

                    b.Navigation("ParticipanteCapacitacion");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Provincia", b =>
                {
                    b.Navigation("Distritos");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.PuestoLaboral", b =>
                {
                    b.Navigation("Contrataciones");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.Rol", b =>
                {
                    b.Navigation("EmpleadoRol");

                    b.Navigation("RolSubModulo");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.SubModulo", b =>
                {
                    b.Navigation("RolSubModulo");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.TipoCapacitacion", b =>
                {
                    b.Navigation("Capacitaciones");
                });

            modelBuilder.Entity("Cenfotur.Entidad.Models.TipoDocumento", b =>
                {
                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
